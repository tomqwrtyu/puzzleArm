// Generated by gencpp from file algo/num_state.msg
// DO NOT EDIT!


#ifndef ALGO_MESSAGE_NUM_STATE_H
#define ALGO_MESSAGE_NUM_STATE_H

#include <ros/service_traits.h>


#include <algo/num_stateRequest.h>
#include <algo/num_stateResponse.h>


namespace algo
{

struct num_state
{

typedef num_stateRequest Request;
typedef num_stateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct num_state
} // namespace algo


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::algo::num_state > {
  static const char* value()
  {
    return "3ef8d46e3fcd35484b18eba316522655";
  }

  static const char* value(const ::algo::num_state&) { return value(); }
};

template<>
struct DataType< ::algo::num_state > {
  static const char* value()
  {
    return "algo/num_state";
  }

  static const char* value(const ::algo::num_state&) { return value(); }
};


// service_traits::MD5Sum< ::algo::num_stateRequest> should match
// service_traits::MD5Sum< ::algo::num_state >
template<>
struct MD5Sum< ::algo::num_stateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::algo::num_state >::value();
  }
  static const char* value(const ::algo::num_stateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::algo::num_stateRequest> should match
// service_traits::DataType< ::algo::num_state >
template<>
struct DataType< ::algo::num_stateRequest>
{
  static const char* value()
  {
    return DataType< ::algo::num_state >::value();
  }
  static const char* value(const ::algo::num_stateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::algo::num_stateResponse> should match
// service_traits::MD5Sum< ::algo::num_state >
template<>
struct MD5Sum< ::algo::num_stateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::algo::num_state >::value();
  }
  static const char* value(const ::algo::num_stateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::algo::num_stateResponse> should match
// service_traits::DataType< ::algo::num_state >
template<>
struct DataType< ::algo::num_stateResponse>
{
  static const char* value()
  {
    return DataType< ::algo::num_state >::value();
  }
  static const char* value(const ::algo::num_stateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ALGO_MESSAGE_NUM_STATE_H
