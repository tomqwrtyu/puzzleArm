// Generated by gencpp from file beacon_cam/point_transform.msg
// DO NOT EDIT!


#ifndef BEACON_CAM_MESSAGE_POINT_TRANSFORM_H
#define BEACON_CAM_MESSAGE_POINT_TRANSFORM_H

#include <ros/service_traits.h>


#include <beacon_cam/point_transformRequest.h>
#include <beacon_cam/point_transformResponse.h>


namespace beacon_cam
{

struct point_transform
{

typedef point_transformRequest Request;
typedef point_transformResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct point_transform
} // namespace beacon_cam


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::beacon_cam::point_transform > {
  static const char* value()
  {
    return "7e85000443f684022e3afc6d15f3d299";
  }

  static const char* value(const ::beacon_cam::point_transform&) { return value(); }
};

template<>
struct DataType< ::beacon_cam::point_transform > {
  static const char* value()
  {
    return "beacon_cam/point_transform";
  }

  static const char* value(const ::beacon_cam::point_transform&) { return value(); }
};


// service_traits::MD5Sum< ::beacon_cam::point_transformRequest> should match
// service_traits::MD5Sum< ::beacon_cam::point_transform >
template<>
struct MD5Sum< ::beacon_cam::point_transformRequest>
{
  static const char* value()
  {
    return MD5Sum< ::beacon_cam::point_transform >::value();
  }
  static const char* value(const ::beacon_cam::point_transformRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::beacon_cam::point_transformRequest> should match
// service_traits::DataType< ::beacon_cam::point_transform >
template<>
struct DataType< ::beacon_cam::point_transformRequest>
{
  static const char* value()
  {
    return DataType< ::beacon_cam::point_transform >::value();
  }
  static const char* value(const ::beacon_cam::point_transformRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::beacon_cam::point_transformResponse> should match
// service_traits::MD5Sum< ::beacon_cam::point_transform >
template<>
struct MD5Sum< ::beacon_cam::point_transformResponse>
{
  static const char* value()
  {
    return MD5Sum< ::beacon_cam::point_transform >::value();
  }
  static const char* value(const ::beacon_cam::point_transformResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::beacon_cam::point_transformResponse> should match
// service_traits::DataType< ::beacon_cam::point_transform >
template<>
struct DataType< ::beacon_cam::point_transformResponse>
{
  static const char* value()
  {
    return DataType< ::beacon_cam::point_transform >::value();
  }
  static const char* value(const ::beacon_cam::point_transformResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // BEACON_CAM_MESSAGE_POINT_TRANSFORM_H
